import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Generate synthetic data
np.random.seed(42)
X = np.random.rand(100, 1)  # Input feature (1D)
y = 2 * X + 1 + np.random.randn(100, 1)  # Target variable (output)

# Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate model performance (mean squared error)
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse:.2f}")

# Plot the data and regression line
plt.scatter(X_test, y_test, label="Test Data")
plt.plot(X_test, y_pred, color='red', label="Regression Line")
plt.xlabel("Input Feature (X)")
plt.ylabel("Target Variable (y)")
plt.title("Linear Regression Example")
plt.legend()
plt.show()
