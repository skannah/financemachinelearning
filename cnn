import tensorflow as tf
from tensorflow.keras import layers

# Load your labeled dataset (replace with your own data)
# X: Images (features), y: Labels (0 for Android, 1 for Apple)
# Preprocess the images (resize, normalize, etc.)

# Define the CNN model
model = tf.keras.Sequential([
    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(image_height, image_width, 3)),
    layers.MaxPooling2D((2, 2)),
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(1, activation='sigmoid')  # Binary classification (Android vs. Apple)
])

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=10, validation_data=(X_val, y_val))

# Evaluate the model on the test set
test_loss, test_accuracy = model.evaluate(X_test, y_test)
print(f"Test Accuracy: {test_accuracy:.2f}")

# Make predictions for new images
new_image = preprocess_new_image("path/to/new_image.jpg")
prediction = model.predict(new_image)
if prediction > 0.5:
    print("Predicted: Apple user")
else:
    print("Predicted: Android user")
